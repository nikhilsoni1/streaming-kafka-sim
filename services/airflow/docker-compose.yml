version: '3.8'

services:
  airport:
    image: postgres:13
    container_name: airflow-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"  # host:container
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow-net

  airflow:
    build: .
    container_name: local-airflow
    restart: always
    depends_on:
      - airport
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__DATABASE__SQL_ALCHEMY_SCHEMA: ${AIRFLOW__DATABASE__SQL_ALCHEMY_SCHEMA}
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/orchestration/dags
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
    volumes:
      - ../../orchestration:/opt/airflow/orchestration
      - ../../data-access:/opt/airflow/data-access
    ports:
      - "8081:8080"
    networks:
      - airflow-net
    command: >
      bash -c "airflow db migrate &&
               airflow users create --username ${AIRFLOW_ADMIN_USERNAME} --password ${AIRFLOW_ADMIN_PASSWORD} --firstname Air --lastname Flow --role Admin --email airflow@example.com &&
               airflow webserver"

  scheduler:
    build: .
    container_name: local-airflow-scheduler
    restart: always
    depends_on:
      - airport
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__DATABASE__SQL_ALCHEMY_SCHEMA: ${AIRFLOW__DATABASE__SQL_ALCHEMY_SCHEMA}
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/orchestration/dags
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
    volumes:
      - ../../orchestration:/opt/airflow/orchestration
      - ../../data-access:/opt/airflow/data-access
    networks:
      - airflow-net
    command: >
      bash -c "airflow db migrate &&
               airflow scheduler"

volumes:
  postgres_data:

networks:
  airflow-net:
